{"version":3,"sources":["Search/Search.js","redux/actions.js","redux/constants.js","services/dataService.js","MeteoriteLanding/MeteoriteLanding.js","List/List.js","App/App.js","serviceWorker.js","redux/reducers.js","index.js"],"names":["connect","dispatch","onSearchChange","event","type","payload","target","value","props","react_default","a","createElement","Navbar","bg","variant","Brand","href","Nav","className","Form","inline","FormControl","placeholder","onChange","DataService","data","this","name","id","nametype","recclass","mass","Math","floor","fall","year","Date","getFullYear","toString","latitude","geolocation","longitude","MeteoriteLanding","_ref","info","List","fetchData","_this$props","isPending","error","searchTerm","filtered","filter","landing","toLowerCase","includes","style","textAlign","Spinner","animation","marginTop","overflowX","Slide_default","left","Table","striped","bordered","hover","map","key","React","Component","state","fetchDataReducer","searchDataReducer","num","fetch","concat","then","json","catch","App","Search_Search","src_List_List","Boolean","window","location","hostname","match","initialState","initialStateSearch","rootReducer","combineReducers","arguments","length","undefined","action","Object","objectSpread","store","createStore","applyMiddleware","thunk","ReactDOM","render","es","App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3a0855c4.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { FormControl, Form, Navbar, Nav } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport { searchData } from \"../redux/actions\";\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onSearchChange: event => dispatch(searchData(event.target.value))\r\n});\r\n\r\nfunction Search(props) {\r\n  return (\r\n    <Navbar bg=\"dark\" variant=\"dark\">\r\n      <Navbar.Brand href=\"#home\">Meteorite Explorer</Navbar.Brand>\r\n\r\n      <Nav className=\"mr-auto\">\r\n        {/* <Nav.Link href=\"#home\">Home</Nav.Link> */}\r\n      </Nav>\r\n      <Form inline>\r\n        <FormControl\r\n          type=\"text\"\r\n          placeholder=\"Search\"\r\n          className=\"mr-sm-2\"\r\n          onChange={props.onSearchChange}\r\n        />\r\n      </Form>\r\n    </Navbar>\r\n  );\r\n}\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps\r\n)(Search);\r\n","import { FETCH_DATA, FETCH_DATA_FAILED, SEARCH_DATA } from \"./constants.js\";\r\n\r\nexport const fetchData = num => dispatch => {\r\n  fetch(`https://data.nasa.gov/resource/gh4g-9sfh.json?$limit=${1000}`)\r\n    .then(data => data.json())\r\n    .then(data => dispatch({ type: FETCH_DATA, payload: data }))\r\n    .catch(error => dispatch({ type: FETCH_DATA_FAILED, payload: error }));\r\n};\r\n\r\nexport const searchData = searchTerm => ({\r\n  type: SEARCH_DATA,\r\n  payload: searchTerm\r\n});\r\n","export const FETCH_DATA = \"FETCH_DATA\";\r\nexport const FETCH_DATA_FAILED = \"FETCH_DATA_FAILED\";\r\nexport const SEARCH_DATA = \"SEARCH_DATA\";\r\n","function DataService(data) {\r\n  this.name = data.name || \"N/A\";\r\n  this.id = data.id || \"N/A\";\r\n  this.nametype = data.nametype || \"N/A\";\r\n  this.recclass = data.recclass || \"N/A\";\r\n  this.mass = Math.floor(data.mass) || \"N/A\";\r\n  this.fall = data.fall || \"N/A\";\r\n  this.year = data.year ? new Date(data.year).getFullYear().toString() : \"N/A\";\r\n\r\n  this.latitude = data.geolocation ? data.geolocation.latitude : \"N/A\";\r\n  this.longitude = data.geolocation ? data.geolocation.longitude : \"N/A\";\r\n}\r\n\r\nexport default DataService;\r\n","import React from \"react\";\r\nimport DataService from \"../services/dataService\";\r\n\r\nexport default function MeteoriteLanding(props) {\r\n  const {\r\n    name,\r\n    id,\r\n    nametype,\r\n    recclass,\r\n    mass,\r\n    fall,\r\n    year,\r\n    longitude,\r\n    latitude\r\n  } = new DataService(props.info);\r\n\r\n  return (\r\n    <tr>\r\n      <td>{name}</td>\r\n      <td>{id}</td>\r\n      <td>{nametype}</td>\r\n      <td>{recclass}</td>\r\n      <td>{mass}</td>\r\n      <td>{fall}</td>\r\n      <td>{year}</td>\r\n      <td>{latitude}</td>\r\n      <td>{longitude} </td>\r\n    </tr>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport MeteoriteLanding from \"../MeteoriteLanding/MeteoriteLanding\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchData } from \"../redux/actions\";\r\nimport { Table, Spinner } from \"react-bootstrap\";\r\nimport Slide from \"react-reveal/Slide\";\r\n\r\nconst mapStateToProps = state => ({\r\n  data: state.fetchDataReducer.data,\r\n  isPending: state.fetchDataReducer.isPending,\r\n  error: state.fetchDataReducer.error,\r\n  searchTerm: state.searchDataReducer.searchTerm,\r\n  num: state.fetchDataReducer.num\r\n});\r\nconst mapDispatchToProps = dispatch => ({\r\n  fetchData: () => dispatch(fetchData())\r\n});\r\n\r\nclass List extends React.Component {\r\n  componentDidMount() {\r\n    this.props.fetchData();\r\n  }\r\n  render() {\r\n    const { isPending, error, data, searchTerm } = this.props;\r\n    const filtered = data.filter(landing =>\r\n      landing.name.toLowerCase().includes(searchTerm.toLowerCase())\r\n    );\r\n\r\n    return isPending ? (\r\n      <div style={{ textAlign: \"center\" }}>\r\n        <Spinner animation=\"border\" style={{ marginTop: \"40vh\" }} />\r\n      </div>\r\n    ) : error ? (\r\n      <h1>There was some error please refresh the page</h1>\r\n    ) : (\r\n      <div style={{ overflowX: \"visible\" }}>\r\n        <Slide left>\r\n          <Table striped bordered hover>\r\n            <thead>\r\n              <tr>\r\n                <th>Name</th>\r\n                <th>Id</th>\r\n                <th>Name Type</th>\r\n                <th>Rec Class</th>\r\n                <th>Mass (g)</th>\r\n                <th>Fall</th>\r\n                <th>Year</th>\r\n                <th>Latttude</th>\r\n                <th>Longitue</th>\r\n              </tr>\r\n            </thead>\r\n\r\n            <tbody>\r\n              {filtered.map(landing => (\r\n                <MeteoriteLanding key={landing.id} info={landing} />\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        </Slide>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(List);\r\n","import React from \"react\";\nimport Search from \"../Search/Search\";\nimport List from \"../List/List.js\";\n\nfunction App() {\n  return (\n    <div>\n      <Search />\n      <List />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { FETCH_DATA, FETCH_DATA_FAILED, SEARCH_DATA } from \"./constants.js\";\r\n\r\nconst initialState = {\r\n  isPending: true,\r\n  data: [],\r\n  error: \"\"\r\n};\r\nexport const fetchDataReducer = (state = initialState, action = {}) => {\r\n  switch (action.type) {\r\n    case FETCH_DATA:\r\n      return {\r\n        ...state,\r\n        isPending: false,\r\n        data: action.payload\r\n      };\r\n    case FETCH_DATA_FAILED:\r\n      return { ...state, isPending: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst initialStateSearch = {\r\n  searchTerm: \"\"\r\n};\r\n\r\nexport const searchDataReducer = (state = initialStateSearch, action = {}) => {\r\n  switch (action.type) {\r\n    case SEARCH_DATA:\r\n      return { ...state, searchTerm: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport { createStore, applyMiddleware, combineReducers } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { fetchDataReducer, searchDataReducer } from \"./redux/reducers\";\nimport { Provider } from \"react-redux\";\n\nconst rootReducer = combineReducers({ fetchDataReducer, searchDataReducer });\n\nconst store = createStore(rootReducer, applyMiddleware(thunk));\n\n/*\n infiniteScroll,\n map,\n animation,\n responsive\n*/\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}